<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="GROUP_BY_SEVERITY" value="true" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="MusicVisualizer" targetName="spikeylog" />
      <config projectName="MusicVisualizer" targetName="gtest" />
      <config projectName="MusicVisualizer" targetName="MusicVisualizer" />
      <config projectName="MusicVisualizer" targetName="MusicVisualizerTests" />
      <config projectName="MusicVisualizer" targetName="MusicVisualizer_lib" />
      <config projectName="MusicVisualizer" targetName="uninstall" />
      <config projectName="MusicVisualizer" targetName="gtest_main" />
      <config projectName="MusicVisualizer" targetName="gmock" />
      <config projectName="MusicVisualizer" targetName="PortAudio" />
      <config projectName="MusicVisualizer" targetName="gmock_main" />
      <config projectName="MusicVisualizer" targetName="glew" />
      <config projectName="MusicVisualizer" targetName="update_mappings" />
      <config projectName="MusicVisualizer" targetName="glfw" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="false" CONFIG_NAME="Debug" />
      <configuration PROFILE_NAME="linux-debug" ENABLED="true" FROM_PRESET="true" GENERATION_DIR="$PROJECT_DIR$/build/linux-debug" />
      <configuration PROFILE_NAME="linux-release" ENABLED="true" FROM_PRESET="true" GENERATION_DIR="$PROJECT_DIR$/build/linux-release" />
      <configuration PROFILE_NAME="x64-debug" ENABLED="false" FROM_PRESET="true" GENERATION_DIR="$PROJECT_DIR$/build/x64-debug" />
      <configuration PROFILE_NAME="x64-release" ENABLED="false" FROM_PRESET="true" GENERATION_DIR="$PROJECT_DIR$/build/x64-release" />
      <configuration PROFILE_NAME="x86-debug" ENABLED="false" FROM_PRESET="true" GENERATION_DIR="$PROJECT_DIR$/build/x86-debug" />
      <configuration PROFILE_NAME="x86-release" ENABLED="false" FROM_PRESET="true" GENERATION_DIR="$PROJECT_DIR$/build/x86-release" />
      <configuration PROFILE_NAME="macos-debug" ENABLED="false" FROM_PRESET="true" GENERATION_DIR="$PROJECT_DIR$/build/macos-debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c8a37012-a0dc-4a04-97fb-98d06fcd7ecb" name="Changes" comment="not really sure">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/docs/gmock_cook_book.md" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/docs/gmock_cook_book.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googlemock/include/gmock/gmock-matchers.h" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googlemock/include/gmock/gmock-matchers.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googlemock/src/gmock.cc" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googlemock/src/gmock.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googletest/include/gtest/gtest-matchers.h" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googletest/include/gtest/gtest-matchers.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googletest/include/gtest/internal/gtest-internal.h" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googletest/include/gtest/internal/gtest-internal.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googletest/include/gtest/internal/gtest-port.h" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googletest/include/gtest/internal/gtest-port.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest-internal-inl.h" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest-internal-inl.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest-port.cc" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest-port.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest-typed-test.cc" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest-typed-test.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest.cc" beforeDir="false" afterPath="$PROJECT_DIR$/lib/googletest/googletest/src/gtest.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Application.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Application.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MusicVisualizer/MusicVisualizer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/MusicVisualizer/MusicVisualizer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MusicVisualizer/MusicVisualizer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/MusicVisualizer/MusicVisualizer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/ContextCreation/GLFWHandler.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/ContextCreation/GLFWHandler.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/ContextCreation/GLFWHandler.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/ContextCreation/GLFWHandler.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/Renderer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/Renderer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/Renderer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/MusicVisualizer/Utils/Rendering/Renderer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/MusicVisualizer/LoggerMock.h" beforeDir="false" afterPath="$PROJECT_DIR$/tests/MusicVisualizer/LoggerMock.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:linux-release" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
    <option name="SET_USER_NAME_GLOBALLY" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="NamedScopeManager">
    <scope name="source" pattern="file[music-visualizer]:src//*||file:.gitignore||file:.gitmodules||file:CMakeLists.txt||file:CMakePresets.json||file:LICENSE.txt||file:README.md||file[music-visualizer]:tests//*" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2022" />
    <option name="minorVersion" value="3" />
  </component>
  <component name="ProjectId" id="2Iy9OoYXdsHXXY94Xqho6mcFPwT" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;TODO_SCOPE&quot;: &quot;source&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;cf.advertisement.text.has.clang-format&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;CMakeSettings&quot;,
    &quot;structure.view.defaults.are.configured&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.MusicVisualizer">
    <configuration name="MusicVisualizerTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="MusicVisualizerTests" CONFIG_NAME="linux-release" RUN_TARGET_PROJECT_NAME="MusicVisualizer" RUN_TARGET_NAME="MusicVisualizerTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MusicVisualizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="MusicVisualizer" CONFIG_NAME="linux-release" RUN_TARGET_PROJECT_NAME="MusicVisualizer" RUN_TARGET_NAME="MusicVisualizer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MusicVisualizer_lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="MusicVisualizer_lib" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PortAudio" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="PortAudio" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glew" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="glew" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="glfw" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="gmock" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="gmock_main" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="gtest" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="gtest_main" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="spikeylog" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="spikeylog" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="uninstall" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="MusicVisualizer" TARGET_NAME="update_mappings" CONFIG_NAME="linux-release">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.gmock" />
      <item itemvalue="CMake Application.gmock_main" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.glew" />
      <item itemvalue="CMake Application.uninstall" />
      <item itemvalue="CMake Application.glfw" />
      <item itemvalue="CMake Application.update_mappings" />
      <item itemvalue="CMake Application.PortAudio" />
      <item itemvalue="CMake Application.spikeylog" />
      <item itemvalue="CMake Application.MusicVisualizer" />
      <item itemvalue="CMake Application.MusicVisualizer_lib" />
      <item itemvalue="Google Test.MusicVisualizerTests" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c8a37012-a0dc-4a04-97fb-98d06fcd7ecb" name="Changes" comment="" />
      <created>1671142926921</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1671142926921</updated>
      <workItem from="1671142929361" duration="6525000" />
      <workItem from="1671212130593" duration="473000" />
    </task>
    <task id="LOCAL-00001" summary="not really sure">
      <created>1671148281609</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1671148281609</updated>
    </task>
    <task id="LOCAL-00002" summary="not really sure">
      <created>1671148370937</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1671148370937</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="9acfa232-3335-4b3f-b640-a8846893af5f">
          <value>
            <State />
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="not really sure" />
    <option name="LAST_COMMIT_MESSAGE" value="not really sure" />
  </component>
</project>